<Project>
  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificBuildOutput);GetMyPackageFiles</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>
  <Target Name="GetMyPackageFiles" DependsOnTargets="Publish">  
  
  <!-- it will run every TFM and excatly what I want. And let's see if Publish output itemgroup. Directly pipe item group to  -->
    <ItemGroup>
      <TfmSpecificPackageFile Include="DotnetToolSettings.xml">
        <PackagePath>tools/$(targetframework)/aa.xml</PackagePath>
      </TfmSpecificPackageFile>
    </ItemGroup>
  </Target>
</Project>


<!--Error out C:\Program Files\dotnet\sdk\2.1.3\Sdks\NuGet.Build.Tasks.Pack\buildCrossTargeting\NuGet.Build.Tasks.Pack.targets(204,5): warning
: File 'C:\work\testpack00\DotnetToolSettings.xml' 
is not added because the package already contains file 
'tools\DotnetToolSettings.xml' [C:\work\testpack00\consoledemo.csproj]-->